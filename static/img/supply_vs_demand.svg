<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   id="svg207"
   version="1.1"
   preserveAspectRatio="xMinYMin meet"
   viewBox="0 0 856.15704 463.46039"
   height="463.46039"
   width="856.15704"
   sodipodi:docname="supply_vs_demand.svg"
   inkscape:version="1.1.2 (0a00cf5339, 2022-02-04)"
   inkscape:export-filename="/home/pellyadolfo/Downloads/images/00901 - ecosystem/price_estimations_black.png"
   inkscape:export-xdpi="56.050098"
   inkscape:export-ydpi="56.050098"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview101"
     pagecolor="#ffc0ff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.15686275"
     inkscape:pagecheckerboard="false"
     showgrid="false"
     inkscape:zoom="1.0425926"
     inkscape:cx="387.49556"
     inkscape:cy="347.69094"
     inkscape:window-width="1920"
     inkscape:window-height="1013"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg207"
     width="725.15704px"
     inkscape:lockguides="false"
     showguides="true"
     showborder="true"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0"
     height="499.46039px" />
  <defs
     id="svgEditorDefs">
    <marker
       style="overflow:visible"
       id="marker108718"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lstart"
       inkscape:isstock="true">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path108449" />
    </marker>
    <marker
       style="overflow:visible"
       id="DotL"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="DotL"
       inkscape:isstock="true">
      <path
         transform="matrix(0.8,0,0,0.8,5.92,0.8)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="m -2.5,-1 c 0,2.76 -2.24,5 -5,5 -2.76,0 -5,-2.24 -5,-5 0,-2.76 2.24,-5 5,-5 2.76,0 5,2.24 5,5 z"
         id="path108510" />
    </marker>
    <linearGradient
       id="linearGradient44679">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop44677" />
    </linearGradient>
    <marker
       style="overflow:visible"
       id="marker1502"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1235" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker1493"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1232" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker163883"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path163881" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker163873"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path163871" />
    </marker>
    <marker
       style="overflow:visible"
       id="Arrow1Lend"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path163590" />
    </marker>
    <marker
       style="overflow:visible"
       id="Arrow1Lstart"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path163587" />
    </marker>
    <marker
       style="overflow:visible"
       id="Arrow2Lend"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-1.1,0,0,-1.1,-1.1,0)"
         d="M 8.7185878,4.0337352 -2.2072895,0.01601326 8.7185884,-4.0017078 c -1.7454984,2.3720609 -1.7354408,5.6174519 -6e-7,8.035443 z"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:0.625;stroke-linejoin:round"
         id="path163608" />
    </marker>
    <style
       type="text/css"
       id="style166">.svg_text_unselect{-moz-user-select: none;-webkit-user-select: none;-ms-user-select: none;}
</style>
    <linearGradient
       gradientUnits="objectBoundingBox"
       id="lgrd2-black-white"
       spreadMethod="pad"
       x1="0"
       x2="1"
       y1="0"
       y2="1">
      <stop
         offset="0%"
         stop-color="black"
         id="stop168" />
      <stop
         offset="100%"
         stop-color="white"
         id="stop170" />
    </linearGradient>
    <pattern
       height="10"
       id="hatch-black-45"
       patternTransform="rotate(45) scale(0.4)"
       patternUnits="userSpaceOnUse"
       viewBox="0 0 10 10"
       width="10"
       x="0"
       y="0">
      <line
         style="stroke:black;stroke-width:1px;"
         x1="0"
         x2="10"
         y1="5"
         y2="5"
         id="line173" />
    </pattern>
    <marker
       id="arrow15-12-left"
       markerHeight="12"
       markerUnits="strokeWidth"
       markerWidth="15"
       orient="auto"
       refX="3"
       refY="0"
       viewBox="0 -5 20 20">
      <path
         d="M 15,-5 0,0 15,5 Z"
         fill="#000000"
         id="path176" />
    </marker>
    <marker
       id="arrow10-8-left"
       markerHeight="8"
       markerUnits="strokeWidth"
       markerWidth="10"
       orient="auto"
       refX="3"
       refY="0"
       viewBox="0 -5 20 20">
      <path
         d="M 15,-5 0,0 15,5 Z"
         fill="#000000"
         id="path179" />
    </marker>
    <marker
       id="diam8"
       markerHeight="8"
       markerUnits="strokeWidth"
       markerWidth="8"
       orient="auto"
       refX="0"
       refY="0"
       viewBox="-5 -5 10 10">
      <path
         d="M -5,0 0,5 5,0 0,-5 Z"
         fill="#000000"
         id="path182" />
    </marker>
    <marker
       id="arrow20-16-left"
       markerHeight="16"
       markerUnits="strokeWidth"
       markerWidth="20"
       orient="auto"
       refX="3"
       refY="0"
       viewBox="0 -5 20 20">
      <path
         d="M 15,-5 0,0 15,5 Z"
         fill="#000000"
         id="path185" />
    </marker>
    <marker
       id="arrow15-12-right"
       markerHeight="12"
       markerUnits="strokeWidth"
       markerWidth="15"
       orient="auto"
       refX="-3"
       refY="0"
       viewBox="-15 -5 20 20">
      <path
         d="M -15,-5 0,0 -15,5 Z"
         fill="#000000"
         id="path188" />
    </marker>
    <marker
       id="arrow15-12-left-3"
       markerHeight="12"
       markerUnits="strokeWidth"
       markerWidth="15"
       orient="auto"
       refX="3"
       refY="0"
       viewBox="0 -5 20 20">
      <path
         d="M 15,-5 0,0 15,5 Z"
         fill="#000000"
         id="path176-8" />
    </marker>
    <marker
       id="arrow15-12-right-0"
       markerHeight="12"
       markerUnits="strokeWidth"
       markerWidth="15"
       orient="auto"
       refX="-3"
       refY="0"
       viewBox="-15 -5 20 20">
      <path
         d="M -15,-5 0,0 -15,5 Z"
         fill="#000000"
         id="path188-5" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker1493-3"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1232-6" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker1502-7"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1235-5" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker1493-3-9"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(0.8,0,0,0.8,10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1232-6-1" />
    </marker>
    <marker
       style="overflow:visible"
       id="marker1502-7-2"
       refX="0"
       refY="0"
       orient="auto">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path1235-5-7" />
    </marker>
  </defs>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  <text
     xml:space="preserve"
     style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none"
     x="89.309334"
     y="20.209476"
     id="text50842"><tspan
       sodipodi:role="line"
       id="tspan50840"
       x="89.309334"
       y="20.209476" /><tspan
       sodipodi:role="line"
       id="tspan50844"
       x="89.309334"
       y="70.209473" /></text>
  <g
     style="fill:#000000"
     id="g1174"
     transform="matrix(0.83789306,0,0,0.81799172,14.873924,29.166521)">
    <path
       id="XMLID_5_"
       d="m 93.331,248.276 c -1.476,1.183 -3.244,1.758 -4.999,1.758 -2.344,0 -4.667,-1.024 -6.247,-2.996 l -1.099,-1.371 c -1.182,-1.475 -1.757,-3.239 -1.758,-4.993 -10e-4,-2.346 1.024,-4.671 2.997,-6.253 3.447,-2.761 8.482,-2.209 11.246,1.238 l 1.099,1.371 c 1.182,1.475 1.757,3.239 1.759,4.993 0,2.346 -1.026,4.671 -2.998,6.253 z m 22.745,41.179 c 1.58,1.975 3.905,3.002 6.251,3.002 1.753,0 3.519,-0.573 4.994,-1.754 1.974,-1.579 3.001,-3.904 3.002,-6.25 0,-1.753 -0.573,-3.519 -1.754,-4.994 l -1.097,-1.371 c -2.761,-3.45 -7.796,-4.009 -11.245,-1.248 -1.974,1.579 -3.001,3.904 -3.002,6.25 0,1.753 0.573,3.519 1.754,4.994 z m -3.194,-37.314 c 1.757,0 3.527,-0.576 5.004,-1.762 1.972,-1.583 2.995,-3.909 2.992,-6.255 -0.003,-1.754 -0.579,-3.519 -1.763,-4.992 l -1.1,-1.37 c -2.766,-3.445 -7.802,-3.995 -11.247,-1.229 -1.965,1.578 -2.988,3.894 -2.992,6.231 -0.002,1.761 0.574,3.535 1.762,5.016 l 1.1,1.37 c 1.581,1.968 3.902,2.991 6.244,2.991 z m -20.276,21.762 c 1.58,1.97 3.902,2.994 6.245,2.994 1.756,0 3.524,-0.575 5.001,-1.76 1.972,-1.582 2.997,-3.908 2.995,-6.254 -0.002,-1.753 -0.578,-3.519 -1.76,-4.992 l -1.099,-1.37 c -2.765,-3.445 -7.8,-3.998 -11.246,-1.234 -1.972,1.582 -2.997,3.908 -2.995,6.254 0.002,1.753 0.578,3.519 1.76,4.992 z M 6.904,189.391 c -10.859,-13.552 -8.669,-33.412 4.882,-44.272 6.705,-5.374 15.07,-7.653 23.202,-6.74 0.881,-8.132 4.927,-15.802 11.631,-21.176 13.552,-10.86 33.413,-8.672 44.273,4.881 9.132,11.396 9.036,27.252 0.718,38.467 l 14.114,17.611 6.343,-5.083 c 1.747,-1.399 4,-2.003 6.21,-1.666 3.117,0.476 6.278,1.163 9.397,2.045 4.252,1.2 6.725,5.621 5.524,9.873 -1.201,4.251 -5.621,6.729 -9.874,5.523 -1.362,-0.384 -2.73,-0.723 -4.096,-1.011 l -54.316,43.528 c -0.096,8.868 1.733,18.219 5.351,27.258 1.642,4.102 -0.353,8.758 -4.455,10.399 -0.975,0.391 -1.981,0.575 -2.97,0.575 -3.174,0 -6.178,-1.902 -7.43,-5.029 -4.974,-12.428 -7.162,-25.468 -6.325,-37.711 0.152,-2.232 1.233,-4.299 2.979,-5.698 l 6.342,-5.082 -14.114,-17.612 c -12.759,5.676 -28.254,2.313 -37.386,-9.08 z m 34.267,-7.606 c 1.476,-1.183 3.243,-1.757 4.998,-1.757 2.344,0 4.667,1.025 6.248,2.997 l 18.474,23.052 22.349,-17.91 -18.474,-23.051 c -1.327,-1.655 -1.941,-3.771 -1.709,-5.88 0.232,-2.108 1.293,-4.039 2.949,-5.365 6.667,-5.344 7.745,-15.115 2.401,-21.782 -5.343,-6.666 -15.114,-7.746 -21.781,-2.401 -5.235,4.195 -7.177,11.232 -4.831,17.511 1.209,3.235 0.205,6.882 -2.491,9.042 -2.695,2.161 -6.473,2.348 -9.368,0.462 -5.617,-3.654 -12.908,-3.294 -18.144,0.901 -6.667,5.343 -7.745,15.114 -2.403,21.781 5.344,6.666 15.115,7.745 21.782,2.4 z m 130.878,13.611 v 13.847 c 0,4.418 3.582,8 8,8 4.418,0 8,-3.582 8,-8 v -13.847 c 0,-4.418 -3.582,-8 -8,-8 -4.418,0 -8,3.582 -8,8 z m 89.825,5.592 c -5.833,-4.487 -11.953,-6.813 -18.191,-6.916 -0.088,-0.003 -0.176,-0.003 -0.262,0 -10.593,0.174 -21.133,7.024 -29.678,19.29 -12.894,18.507 -21.496,49.931 -12.989,74.18 1.155,3.293 4.246,5.354 7.549,5.354 0.878,0 1.772,-0.146 2.648,-0.453 4.169,-1.462 6.364,-6.027 4.901,-10.197 -6.414,-18.284 0.566,-44.731 11.02,-59.737 5.401,-7.753 11.473,-12.276 16.682,-12.435 2.687,0.081 5.568,1.29 8.565,3.597 3.501,2.694 8.525,2.038 11.219,-1.463 2.693,-3.503 2.038,-8.525 -1.464,-11.22 z m 55.959,83.815 c 4.441,0.094 8.083,-3.39 8.188,-7.808 0.559,-23.419 -7.272,-49.901 -26.028,-56.272 -0.083,-0.028 -0.167,-0.055 -0.25,-0.08 -8.379,-2.541 -18.031,-0.796 -27.905,5.051 -18.53,10.973 -35.347,34.982 -39.988,57.089 -0.907,4.324 1.862,8.565 6.186,9.473 0.554,0.116 1.107,0.173 1.651,0.173 3.705,0 7.03,-2.589 7.822,-6.358 3.741,-17.821 17.705,-37.858 32.481,-46.609 5.763,-3.413 11.076,-4.67 14.98,-3.544 9.069,3.218 15.534,20.665 15.056,40.698 -0.105,4.415 3.39,8.081 7.807,8.187 z M 79.386,98.156 c 1.125,0.546 2.314,0.805 3.486,0.805 2.968,0 5.82,-1.659 7.203,-4.51 0.328,-0.676 4.291,-10.84 4.634,-11.625 18.757,-35.931 54.69,-59.748 98.609,-65.353 45.783,-5.839 91.697,9.912 119.827,41.116 2.958,3.281 8.018,3.543 11.298,0.586 3.282,-2.959 3.544,-8.018 0.585,-11.299 C 308.968,30.061 287.752,16.428 263.674,8.451 240.741,0.853 215.713,-1.513 191.292,1.601 142.04,7.887 101.638,34.85 80.444,75.579 c -0.403,0.775 -4.561,11.412 -4.809,11.985 -1.856,3.956 -0.192,8.679 3.751,10.592 z m 166.264,69.3 c 3.039,3.208 2.901,8.271 -0.307,11.31 -3.208,3.038 -8.271,2.9 -11.31,-0.308 -2.856,-3.015 -6.49,-5.038 -10.508,-5.849 -3.733,-0.753 -6.417,-4.033 -6.417,-7.842 v -10.361 h -35.231 v 10.361 c 0,3.809 -2.685,7.089 -6.417,7.842 -9.25,1.866 -15.962,10.058 -15.962,19.477 v 90.376 c 0,4.418 -3.582,8 -8,8 -4.418,0 -8,-3.582 -8,-8 v -90.376 c 0,-14.737 9.094,-27.808 22.38,-33.225 v -8.751 c -3.809,-3.271 -6.227,-8.12 -6.227,-13.522 v -10.549 c 0,-9.824 7.993,-17.817 17.818,-17.817 h 44.049 c 9.825,0 17.817,7.993 17.817,17.817 v 10.549 c 0,5.403 -2.417,10.252 -6.227,13.522 v 8.747 c 4.71,1.917 8.97,4.827 12.542,8.599 z m -22.314,-41.417 c 0,-0.985 -0.832,-1.817 -1.817,-1.817 H 177.47 c -0.986,0 -1.818,0.832 -1.818,1.817 v 10.549 c 0,0.745 0.477,1.403 1.135,1.68 0.023,0.009 0.046,0.019 0.069,0.027 0.193,0.072 0.4,0.111 0.614,0.111 h 44.049 c 0.209,0 0.412,-0.037 0.601,-0.106 0.032,-0.013 0.063,-0.025 0.095,-0.037 0.651,-0.279 1.122,-0.935 1.122,-1.675 v -10.549 z m 172.553,161.388 c -0.412,17.946 -12.053,41.004 -31.938,63.26 -19.352,21.659 -44.253,40.287 -70.568,52.86 v 20.52 c 0,4.418 -3.582,8 -8,8 H 139.264 c -4.418,0 -8,-3.582 -8,-8 v -20.52 C 104.949,390.974 80.047,372.346 60.696,350.687 40.81,328.431 29.169,305.374 28.757,287.427 c -0.071,-3.123 1.681,-6.002 4.488,-7.373 2.808,-1.37 6.156,-0.981 8.574,0.996 3.474,2.842 16.398,10.032 61.255,15.423 30.408,3.654 69.207,5.667 109.25,5.667 40.043,0 78.842,-2.013 109.249,-5.667 44.856,-5.391 57.78,-12.581 61.254,-15.422 2.418,-1.977 5.767,-2.366 8.574,-0.997 2.807,1.371 4.559,4.25 4.488,7.373 z M 277.382,406.434 H 147.264 v 9.633 h 130.118 z m 99.393,-104.759 c -44.46,15.568 -142.67,16.465 -164.452,16.465 -21.782,0 -119.992,-0.896 -164.453,-16.465 2.59,7.022 6.727,14.653 12.167,22.48 0.14,0.152 0.275,0.311 0.406,0.477 1.163,1.477 3.644,3.953 7.199,3.953 3.164,0 6.171,-1.997 8.25,-5.479 2.265,-3.794 7.175,-5.031 10.97,-2.769 3.793,2.265 5.033,7.177 2.768,10.97 -3.428,5.742 -8.408,9.886 -14.062,11.9 5.831,6.223 12.354,12.363 19.453,18.223 2.499,-2.843 6.744,-3.59 10.108,-1.579 3.793,2.266 5.031,7.178 2.765,10.971 -0.063,0.106 -0.127,0.212 -0.192,0.317 10.286,7.294 21.477,13.885 33.288,19.295 h 142.666 c 11.083,-5.077 21.62,-11.192 31.375,-17.954 -0.368,-0.537 -0.722,-1.09 -1.062,-1.657 -2.267,-3.793 -1.03,-8.705 2.763,-10.972 3.792,-2.267 8.705,-1.029 10.971,2.763 0.051,0.087 0.104,0.172 0.157,0.257 7.821,-6.319 14.975,-12.992 21.307,-19.76 -5.543,-2.048 -10.421,-6.151 -13.796,-11.803 -2.265,-3.793 -1.026,-8.705 2.767,-10.97 3.794,-2.266 8.706,-1.026 10.97,2.767 2.08,3.482 5.086,5.48 8.249,5.48 2.613,0 4.634,-1.342 5.929,-2.559 6.094,-8.48 10.693,-16.771 13.489,-24.351 z m 8.536,-187.446 c -3.804,-2.248 -8.71,-0.986 -10.957,2.818 l -1.016,1.718 c -0.755,1.278 -1.114,2.681 -1.114,4.064 0.001,2.736 1.406,5.4 3.932,6.894 1.277,0.755 2.679,1.113 4.062,1.113 2.737,0 5.402,-1.404 6.895,-3.931 l 1.016,-1.719 c 0.755,-1.278 1.114,-2.681 1.114,-4.064 -0.002,-2.736 -1.406,-5.4 -3.932,-6.893 z m -21.943,15.546 c -3.809,-2.238 -8.712,-0.965 -10.951,2.844 l -1.011,1.72 c -0.748,1.272 -1.104,2.666 -1.104,4.043 -0.001,2.744 1.411,5.417 3.948,6.908 1.273,0.748 2.669,1.104 4.046,1.104 2.743,0 5.415,-1.412 6.905,-3.947 l 1.011,-1.72 c 0.748,-1.272 1.104,-2.666 1.104,-4.043 0.001,-2.745 -1.412,-5.418 -3.948,-6.909 z m 3.012,-26.706 c -3.805,-2.248 -8.71,-0.983 -10.957,2.821 l -1.014,1.718 c -0.754,1.278 -1.113,2.681 -1.112,4.064 0.002,2.736 1.408,5.4 3.934,6.892 1.277,0.754 2.677,1.112 4.06,1.112 2.737,0 5.404,-1.406 6.896,-3.934 l 1.014,-1.718 c 0.754,-1.278 1.113,-2.681 1.112,-4.064 -10e-4,-2.735 -1.407,-5.399 -3.933,-6.891 z m 65.558,31.116 c -9.695,29.553 -24.625,61.808 -43.175,93.276 -7.909,13.415 -16.314,26.413 -24.982,38.635 -1.56,2.199 -4.027,3.373 -6.532,3.373 -1.601,0 -3.216,-0.479 -4.621,-1.476 -3.604,-2.556 -4.454,-7.55 -1.897,-11.153 8.41,-11.857 16.568,-24.476 24.25,-37.504 15.101,-25.617 27.706,-51.712 36.89,-76.286 -2.189,0.809 -4.451,1.749 -6.776,2.813 -0.255,0.135 -0.518,0.256 -0.787,0.363 -22.152,10.339 -49.991,31.832 -77.657,60.467 -0.799,2.314 -1.617,4.635 -2.457,6.97 -1.496,4.157 -6.075,6.318 -10.236,4.819 -4.157,-1.495 -6.315,-6.078 -4.82,-10.235 0.992,-2.758 1.954,-5.501 2.887,-8.23 0.039,-0.122 0.081,-0.244 0.125,-0.365 13.536,-39.688 20.802,-76.142 20.542,-101.726 -0.022,-0.307 -0.026,-0.615 -0.013,-0.922 -0.009,-0.511 -0.021,-1.018 -0.036,-1.52 -15.835,19.663 -31.467,42.416 -45.781,66.694 -4.294,7.283 -8.466,14.702 -12.399,22.051 -2.085,3.896 -6.934,5.363 -10.829,3.277 -3.896,-2.085 -5.363,-6.933 -3.278,-10.828 4.037,-7.542 8.318,-15.154 12.723,-22.626 18.304,-31.047 38.756,-59.726 59.144,-82.934 1.957,-2.226 4.985,-3.189 7.867,-2.501 2.883,0.688 5.149,2.913 5.89,5.783 0.496,1.921 0.921,3.946 1.278,6.072 23.355,-19.767 42.517,-26.052 55.894,-18.165 17.211,10.146 15.885,37.751 9.917,63.566 3.618,-1.036 7.073,-1.751 10.346,-2.13 2.708,-0.316 5.394,0.774 7.119,2.888 1.725,2.114 2.254,4.961 1.404,7.554 z M 395.027,76.091 c -5.957,-3.512 -21.601,0.973 -46.374,24.666 -0.198,20.394 -4.349,45.842 -12.092,74.036 20.555,-18.622 40.502,-32.876 58.088,-41.592 9.638,-33.883 7.236,-53.066 0.378,-57.11 z M 387.181,89.4 c -3.808,-2.243 -8.711,-0.975 -10.954,2.831 l -1.013,1.719 c -0.753,1.279 -1.111,2.682 -1.109,4.065 0.004,2.736 1.413,5.399 3.94,6.889 1.275,0.751 2.673,1.108 4.053,1.108 2.74,0 5.409,-1.408 6.9,-3.939 l 1.013,-1.719 c 0.753,-1.279 1.111,-2.682 1.109,-4.065 -0.003,-2.736 -1.411,-5.399 -3.939,-6.889 z M 142.707,337.562 c 2.265,-3.793 1.026,-8.705 -2.767,-10.97 -3.792,-2.266 -8.705,-1.027 -10.97,2.767 -2.08,3.482 -5.086,5.479 -8.25,5.479 -3.163,0 -6.168,-1.997 -8.247,-5.479 -2.265,-3.793 -7.174,-5.032 -10.97,-2.769 -3.793,2.265 -5.033,7.177 -2.768,10.97 4.963,8.313 13.182,13.277 21.985,13.277 8.803,0.001 17.022,-4.962 21.987,-13.275 z m 60.14,10e-4 c 2.266,-3.793 1.027,-8.705 -2.766,-10.971 -3.792,-2.264 -8.705,-1.027 -10.971,2.766 -2.081,3.482 -5.087,5.48 -8.25,5.48 -3.163,0 -6.169,-1.997 -8.249,-5.479 -2.265,-3.793 -7.176,-5.032 -10.97,-2.767 -3.793,2.265 -5.032,7.177 -2.767,10.97 4.965,8.313 13.184,13.276 21.986,13.276 8.802,0 17.021,-4.963 21.987,-13.275 z m 98.292,13.275 c 8.803,0 17.023,-4.963 21.987,-13.276 2.265,-3.793 1.026,-8.705 -2.767,-10.97 -3.793,-2.266 -8.704,-1.027 -10.97,2.767 -2.08,3.482 -5.086,5.479 -8.25,5.479 -3.163,0 -6.169,-1.997 -8.249,-5.479 -2.266,-3.794 -7.177,-5.032 -10.97,-2.767 -3.793,2.265 -5.032,7.177 -2.767,10.97 4.965,8.313 13.184,13.276 21.986,13.276 z M 167.64,359.85 c -3.793,-2.265 -8.704,-1.027 -10.97,2.766 -2.081,3.482 -5.088,5.48 -8.251,5.48 -3.162,0 -6.168,-1.998 -8.25,-5.48 -2.266,-3.793 -7.178,-5.032 -10.97,-2.766 -3.793,2.266 -5.031,7.178 -2.766,10.971 4.966,8.313 13.185,13.275 21.985,13.275 8.802,0 17.021,-4.963 21.987,-13.275 2.267,-3.794 1.028,-8.706 -2.765,-10.971 z m 35.041,2.766 c -2.265,-3.793 -7.176,-5.032 -10.97,-2.767 -3.793,2.265 -5.032,7.177 -2.767,10.97 4.965,8.313 13.184,13.276 21.986,13.276 8.804,0 17.023,-4.963 21.987,-13.276 2.265,-3.794 1.026,-8.705 -2.767,-10.971 -3.793,-2.262 -8.705,-1.025 -10.97,2.768 -2.079,3.482 -5.086,5.479 -8.25,5.479 -3.163,10e-4 -6.17,-1.996 -8.249,-5.479 z m 38.318,-11.778 c 8.803,0 17.023,-4.963 21.988,-13.276 2.265,-3.793 1.026,-8.705 -2.767,-10.97 -3.793,-2.266 -8.704,-1.027 -10.97,2.767 -2.08,3.482 -5.087,5.479 -8.25,5.479 -3.163,0 -6.169,-1.997 -8.249,-5.479 -2.265,-3.793 -7.176,-5.032 -10.97,-2.767 -3.793,2.265 -5.032,7.177 -2.767,10.97 4.964,8.313 13.182,13.276 21.985,13.276 z m 13.222,9.012 c -3.793,2.265 -5.032,7.177 -2.767,10.97 4.965,8.313 13.184,13.276 21.986,13.276 8.802,0 17.021,-4.963 21.987,-13.275 2.266,-3.793 1.027,-8.705 -2.766,-10.971 -3.793,-2.265 -8.705,-1.027 -10.97,2.766 -2.081,3.482 -5.088,5.48 -8.251,5.48 -3.163,0 -6.169,-1.997 -8.249,-5.479 -2.264,-3.794 -7.175,-5.033 -10.97,-2.767 z" />
  </g>
  <g
     style="fill:#000000"
     id="g1681"
     transform="matrix(0.67544107,0,0,0.96886658,569.21823,9.6919446)">
    <g
       id="g1664">
	<g
   id="g1662">
		<path
   d="m 116.682,229.329 c 11.286,0 22.195,-0.729 32.518,-2.086 V 114.094 c -10.322,-1.356 -21.232,-2.085 -32.518,-2.085 -64.441,0 -116.681,23.693 -116.681,52.921 v 11.477 c 0,29.227 52.24,52.922 116.681,52.922 z"
   id="path1646" />

		<path
   d="m 116.682,288.411 c 11.286,0 22.195,-0.729 32.518,-2.084 v -33.166 c -10.325,1.356 -21.229,2.095 -32.518,2.095 -56.25,0 -103.199,-18.054 -114.227,-42.082 -1.606,3.5 -2.454,7.124 -2.454,10.839 v 11.477 c 0,29.228 52.24,52.921 116.681,52.921 z"
   id="path1648" />

		<path
   d="m 149.199,314.823 v -2.578 c -10.325,1.356 -21.229,2.095 -32.518,2.095 C 60.431,314.34 13.482,296.286 2.454,272.258 0.848,275.757 0,279.381 0,283.096 v 11.477 c 0,29.229 52.24,52.922 116.681,52.922 12.887,0 25.282,-0.95 36.873,-2.7 -2.873,-5.877 -4.355,-12.075 -4.355,-18.496 z"
   id="path1650" />

		<path
   d="m 284.92,22.379 c -64.441,0 -116.681,23.693 -116.681,52.921 v 11.477 c 0,29.228 52.24,52.921 116.681,52.921 64.44,0 116.681,-23.693 116.681,-52.921 V 75.3 c 0,-29.228 -52.241,-52.921 -116.681,-52.921 z"
   id="path1652" />

		<path
   d="m 284.92,165.626 c -56.25,0 -103.199,-18.053 -114.227,-42.082 -1.606,3.499 -2.454,7.123 -2.454,10.839 v 11.477 c 0,29.228 52.24,52.921 116.681,52.921 64.44,0 116.681,-23.693 116.681,-52.921 v -11.477 c 0,-3.716 -0.848,-7.34 -2.454,-10.839 -11.028,24.029 -57.977,42.082 -114.227,42.082 z"
   id="path1654" />

		<path
   d="m 284.92,224.71 c -56.25,0 -103.199,-18.054 -114.227,-42.082 -1.606,3.499 -2.454,7.123 -2.454,10.839 v 11.477 c 0,29.229 52.24,52.922 116.681,52.922 64.44,0 116.681,-23.693 116.681,-52.922 v -11.477 c 0,-3.716 -0.848,-7.34 -2.454,-10.839 -11.028,24.029 -57.977,42.082 -114.227,42.082 z"
   id="path1656" />

		<path
   d="m 284.92,286.983 c -56.25,0 -103.199,-18.054 -114.227,-42.082 -1.606,3.5 -2.454,7.123 -2.454,10.838 v 11.478 c 0,29.228 52.24,52.921 116.681,52.921 64.44,0 116.681,-23.693 116.681,-52.921 v -11.478 c 0,-3.715 -0.848,-7.34 -2.454,-10.838 -11.028,24.027 -57.977,42.082 -114.227,42.082 z"
   id="path1658" />

		<path
   d="m 284.92,346.066 c -56.25,0 -103.199,-18.053 -114.227,-42.081 -1.606,3.5 -2.454,7.125 -2.454,10.838 V 326.3 c 0,29.228 52.24,52.921 116.681,52.921 64.44,0 116.681,-23.693 116.681,-52.921 v -11.478 c 0,-3.715 -0.848,-7.34 -2.454,-10.838 -11.028,24.028 -57.977,42.082 -114.227,42.082 z"
   id="path1660" />

	</g>

</g>
  </g>
  <text
     xml:space="preserve"
     style="font-style:normal;font-weight:normal;font-size:34.8538px;line-height:0.95;font-family:sans-serif;text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.17835"
     x="211.05559"
     y="412.2356"
     id="text5317-6-8-7-3-4-0-6-8"
     transform="scale(0.9542511,1.0479422)"><tspan
       id="tspan5315-2-4-2-6-0-6-2-9"
       x="211.05559"
       y="412.2356"
       style="font-size:34.8538px;text-align:center;text-anchor:middle;fill:#000000;stroke-width:2.17835">DEMAND</tspan></text>
  <text
     xml:space="preserve"
     style="font-style:normal;font-weight:normal;font-size:34.8538px;line-height:0.95;font-family:sans-serif;text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.17835"
     x="734.65021"
     y="411.29449"
     id="text5317-6-8-7-3-4-0-6-8-5"
     transform="scale(0.9542511,1.0479422)"><tspan
       id="tspan5315-2-4-2-6-0-6-2-9-6"
       x="734.65021"
       y="411.29449"
       style="font-size:34.8538px;text-align:center;text-anchor:middle;fill:#000000;stroke-width:2.17835">SUPPLY</tspan></text>
  <g
     style="fill:#000000"
     id="g20449"
     transform="matrix(2.4106023,0,0,2.5255467,398.10153,142.475)">
    <g
       id="g20438">
	<g
   id="g20436">
		<path
   d="m 57.484,28.125 -19,-10.5 C 38.173,17.454 37.797,17.46 37.492,17.639 37.187,17.818 37,18.146 37,18.5 v 5 h -6 c -0.552,0 -1,0.448 -1,1 v 9 c 0,0.552 0.448,1 1,1 h 6 v 5 c 0,0.354 0.187,0.682 0.492,0.861 0.156,0.092 0.332,0.139 0.508,0.139 0.167,0 0.333,-0.042 0.484,-0.125 l 19,-10.5 C 57.802,29.699 58,29.364 58,29 58,28.636 57.802,28.301 57.484,28.125 Z M 39,37.805 V 33.5 c 0,-0.552 -0.448,-1 -1,-1 h -6 v -7 h 6 c 0.552,0 1,-0.448 1,-1 V 20.195 L 54.933,29 Z"
   id="path20432" />

		<path
   d="m 27,23.5 h -6 v -5 c 0,-0.354 -0.187,-0.682 -0.492,-0.861 -0.305,-0.179 -0.682,-0.185 -0.992,-0.014 l -19,10.5 C 0.198,28.301 0,28.636 0,29 c 0,0.364 0.198,0.699 0.516,0.875 l 19,10.5 c 0.151,0.083 0.317,0.125 0.484,0.125 0.176,0 0.352,-0.046 0.508,-0.139 C 20.813,40.182 21,39.854 21,39.5 v -5 h 6 c 0.552,0 1,-0.448 1,-1 v -9 c 0,-0.552 -0.448,-1 -1,-1 z m -1,9 h -6 c -0.552,0 -1,0.448 -1,1 v 4.305 L 3.067,29 19,20.195 V 24.5 c 0,0.552 0.448,1 1,1 h 6 z"
   id="path20434" />

	</g>

</g>
  </g>
</svg>
